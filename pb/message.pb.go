// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// status
// 0 - Alive, 1 - Suspect, 2 - Confirm
type PiggyBack_Type int32

const (
	PiggyBack_Alive   PiggyBack_Type = 0
	PiggyBack_Suspect PiggyBack_Type = 1
	PiggyBack_Confirm PiggyBack_Type = 2
)

var PiggyBack_Type_name = map[int32]string{
	0: "Alive",
	1: "Suspect",
	2: "Confirm",
}
var PiggyBack_Type_value = map[string]int32{
	"Alive":   0,
	"Suspect": 1,
	"Confirm": 2,
}

func (x PiggyBack_Type) String() string {
	return proto.EnumName(PiggyBack_Type_name, int32(x))
}
func (PiggyBack_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_message_0b99dae0e298bd6b, []int{4, 0}
}

type Message struct {
	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Message_Ping
	//	*Message_Ack
	//	*Message_IndirectPing
	Payload              isMessage_Payload `protobuf_oneof:"payload"`
	PiggyBack            *PiggyBack        `protobuf:"bytes,6,opt,name=piggyBack,proto3" json:"piggyBack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_0b99dae0e298bd6b, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_Ping struct {
	Ping *Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

type Message_Ack struct {
	Ack *Ack `protobuf:"bytes,4,opt,name=ack,proto3,oneof"`
}

type Message_IndirectPing struct {
	IndirectPing *IndirectPing `protobuf:"bytes,5,opt,name=indirect_ping,json=indirectPing,proto3,oneof"`
}

func (*Message_Ping) isMessage_Payload() {}

func (*Message_Ack) isMessage_Payload() {}

func (*Message_IndirectPing) isMessage_Payload() {}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetPing() *Ping {
	if x, ok := m.GetPayload().(*Message_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *Message) GetAck() *Ack {
	if x, ok := m.GetPayload().(*Message_Ack); ok {
		return x.Ack
	}
	return nil
}

func (m *Message) GetIndirectPing() *IndirectPing {
	if x, ok := m.GetPayload().(*Message_IndirectPing); ok {
		return x.IndirectPing
	}
	return nil
}

func (m *Message) GetPiggyBack() *PiggyBack {
	if m != nil {
		return m.PiggyBack
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_Ping)(nil),
		(*Message_Ack)(nil),
		(*Message_IndirectPing)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// payload
	switch x := m.Payload.(type) {
	case *Message_Ping:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ping); err != nil {
			return err
		}
	case *Message_Ack:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ack); err != nil {
			return err
		}
	case *Message_IndirectPing:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IndirectPing); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Payload has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 3: // payload.ping
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ping)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_Ping{msg}
		return true, err
	case 4: // payload.ack
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ack)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_Ack{msg}
		return true, err
	case 5: // payload.indirect_ping
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IndirectPing)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_IndirectPing{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// payload
	switch x := m.Payload.(type) {
	case *Message_Ping:
		s := proto.Size(x.Ping)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Ack:
		s := proto.Size(x.Ack)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_IndirectPing:
		s := proto.Size(x.IndirectPing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Ping struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_0b99dae0e298bd6b, []int{1}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (dst *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(dst, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

type Ack struct {
	Payload              string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_0b99dae0e298bd6b, []int{2}
}
func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (dst *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(dst, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

func (m *Ack) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type IndirectPing struct {
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Nack                 bool     `protobuf:"varint,3,opt,name=nack,proto3" json:"nack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndirectPing) Reset()         { *m = IndirectPing{} }
func (m *IndirectPing) String() string { return proto.CompactTextString(m) }
func (*IndirectPing) ProtoMessage()    {}
func (*IndirectPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_0b99dae0e298bd6b, []int{3}
}
func (m *IndirectPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndirectPing.Unmarshal(m, b)
}
func (m *IndirectPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndirectPing.Marshal(b, m, deterministic)
}
func (dst *IndirectPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndirectPing.Merge(dst, src)
}
func (m *IndirectPing) XXX_Size() int {
	return xxx_messageInfo_IndirectPing.Size(m)
}
func (m *IndirectPing) XXX_DiscardUnknown() {
	xxx_messageInfo_IndirectPing.DiscardUnknown(m)
}

var xxx_messageInfo_IndirectPing proto.InternalMessageInfo

func (m *IndirectPing) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *IndirectPing) GetNack() bool {
	if m != nil {
		return m.Nack
	}
	return false
}

type PiggyBack struct {
	Type                 PiggyBack_Type `protobuf:"varint,1,opt,name=type,proto3,enum=pb.PiggyBack_Type" json:"type,omitempty"`
	Id                   string         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Incarnation          uint32         `protobuf:"varint,3,opt,name=incarnation,proto3" json:"incarnation,omitempty"`
	Address              string         `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PiggyBack) Reset()         { *m = PiggyBack{} }
func (m *PiggyBack) String() string { return proto.CompactTextString(m) }
func (*PiggyBack) ProtoMessage()    {}
func (*PiggyBack) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_0b99dae0e298bd6b, []int{4}
}
func (m *PiggyBack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PiggyBack.Unmarshal(m, b)
}
func (m *PiggyBack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PiggyBack.Marshal(b, m, deterministic)
}
func (dst *PiggyBack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PiggyBack.Merge(dst, src)
}
func (m *PiggyBack) XXX_Size() int {
	return xxx_messageInfo_PiggyBack.Size(m)
}
func (m *PiggyBack) XXX_DiscardUnknown() {
	xxx_messageInfo_PiggyBack.DiscardUnknown(m)
}

var xxx_messageInfo_PiggyBack proto.InternalMessageInfo

func (m *PiggyBack) GetType() PiggyBack_Type {
	if m != nil {
		return m.Type
	}
	return PiggyBack_Alive
}

func (m *PiggyBack) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PiggyBack) GetIncarnation() uint32 {
	if m != nil {
		return m.Incarnation
	}
	return 0
}

func (m *PiggyBack) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "pb.Message")
	proto.RegisterType((*Ping)(nil), "pb.Ping")
	proto.RegisterType((*Ack)(nil), "pb.Ack")
	proto.RegisterType((*IndirectPing)(nil), "pb.IndirectPing")
	proto.RegisterType((*PiggyBack)(nil), "pb.PiggyBack")
	proto.RegisterEnum("pb.PiggyBack_Type", PiggyBack_Type_name, PiggyBack_Type_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_0b99dae0e298bd6b) }

var fileDescriptor_message_0b99dae0e298bd6b = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0xbd, 0x6a, 0xeb, 0x30,
	0x14, 0x8e, 0x1d, 0xc5, 0x8e, 0x4f, 0xe2, 0x60, 0xce, 0x70, 0x31, 0x5c, 0xb8, 0x37, 0x78, 0x28,
	0x81, 0x80, 0x87, 0x74, 0x28, 0x74, 0x4b, 0xba, 0xa4, 0x43, 0xa1, 0xa8, 0xdd, 0x8b, 0x62, 0xab,
	0x46, 0x24, 0x91, 0x85, 0xad, 0x16, 0xfc, 0x4e, 0x7d, 0xa9, 0xbe, 0x49, 0x91, 0xa2, 0xa4, 0xce,
	0xe6, 0xef, 0x47, 0x9f, 0xbe, 0x73, 0x64, 0x88, 0x8f, 0xbc, 0x6d, 0x59, 0xc5, 0x73, 0xd5, 0xd4,
	0xba, 0x46, 0x5f, 0xed, 0xb2, 0x6f, 0x0f, 0xc2, 0xa7, 0x13, 0x8b, 0x33, 0xf0, 0x45, 0x99, 0x7a,
	0x73, 0x6f, 0x11, 0x51, 0x5f, 0x94, 0x98, 0x42, 0xc8, 0xca, 0xb2, 0xe1, 0x6d, 0x9b, 0xfa, 0x96,
	0x3c, 0x43, 0xfc, 0x07, 0x44, 0x09, 0x59, 0xa5, 0xc3, 0xb9, 0xb7, 0x98, 0xac, 0xc6, 0xb9, 0xda,
	0xe5, 0xcf, 0x42, 0x56, 0xdb, 0x01, 0xb5, 0x3c, 0xfe, 0x85, 0x21, 0x2b, 0xf6, 0x29, 0xb1, 0x72,
	0x68, 0xe4, 0x75, 0xb1, 0xdf, 0x0e, 0xa8, 0x61, 0xf1, 0x0e, 0x62, 0x21, 0x4b, 0xd1, 0xf0, 0x42,
	0xbf, 0xd9, 0x94, 0x91, 0xb5, 0x25, 0xc6, 0xf6, 0xe8, 0x04, 0x97, 0x36, 0x15, 0x3d, 0x8c, 0x4b,
	0x88, 0x94, 0xa8, 0xaa, 0x6e, 0x63, 0xb2, 0x03, 0x7b, 0x28, 0x3e, 0x5d, 0xed, 0x48, 0xfa, 0xab,
	0x6f, 0x22, 0x08, 0x15, 0xeb, 0x0e, 0x35, 0x2b, 0xb3, 0x00, 0x88, 0x39, 0x9f, 0xfd, 0x87, 0xe1,
	0xba, 0xd8, 0x9b, 0xb1, 0x9c, 0x72, 0x1e, 0xeb, 0x6c, 0xbc, 0x87, 0x69, 0xbf, 0x00, 0xfe, 0x81,
	0x40, 0xb3, 0xa6, 0xe2, 0xda, 0x19, 0x1d, 0x42, 0x04, 0x22, 0x4d, 0x07, 0x33, 0xfe, 0x98, 0xda,
	0xef, 0xec, 0xcb, 0x83, 0xe8, 0x52, 0x04, 0x6f, 0x80, 0xe8, 0x4e, 0x71, 0xbb, 0xcc, 0xd9, 0x0a,
	0xaf, 0x5a, 0xe6, 0xaf, 0x9d, 0xe2, 0xd4, 0xea, 0x6e, 0xe5, 0xfe, 0x65, 0xe5, 0x73, 0x98, 0x08,
	0x59, 0xb0, 0x46, 0x32, 0x2d, 0x6a, 0x69, 0x2f, 0x88, 0x69, 0x9f, 0xea, 0x3f, 0x0a, 0xb9, 0x7a,
	0x94, 0x6c, 0x09, 0xc4, 0x24, 0x63, 0x04, 0xa3, 0xf5, 0x41, 0x7c, 0xf2, 0x64, 0x80, 0x13, 0x08,
	0x5f, 0x3e, 0x5a, 0xc5, 0x0b, 0x9d, 0x78, 0x06, 0x3c, 0xd4, 0xf2, 0x5d, 0x34, 0xc7, 0xc4, 0xdf,
	0x05, 0xf6, 0x17, 0xb8, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x25, 0x84, 0xf9, 0xd7, 0x13, 0x02,
	0x00, 0x00,
}
